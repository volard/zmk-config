#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

// --------------- mouse
// https://zmk.dev/docs/keymaps/behaviors/mouse-emulation#advanced-configuration
#define ZMK_POINTING_DEFAULT_MOVE_VAL 600  // default: 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 10    // default: 10

#include <dt-bindings/zmk/pointing.h>
// ----------------------

#include <dt-bindings/zmk/outputs.h>

// https://zmk.dev/docs/config/behaviors#two-axis-input
&mmv { // mouse movement
    x-input-code = <INPUT_REL_X>;
    y-input-code = <INPUT_REL_Y>;
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
};

&msc { // mouse scroll
    x-input-code = <INPUT_REL_HWHEEL>;
    y-input-code = <INPUT_REL_WHEEL>;
    time-to-max-speed-ms = <500>;
    // 0 - uniform speed, 1 - uniform acceleration, 2 - linear acceleration
    acceleration-exponent = <1>;
};

// https://zmk.dev/docs/keymaps/behaviors/soft-off
//&soft_off {
    // Its actually inconvenient :((
    // hold-time-ms = <5000>;         // Only turn off it the key is held for 5 seconds or longer.
//};

/ {

    // https://zmk.dev/docs/keymaps/conditional-layers
    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };

    combos {
        compatible = "zmk,combos";
        combo_esc {
            timeout-ms = <50>;
            key-positions = <SPACE F>;
            bindings = <&mo 4>;
        };
    };

    // https://zmk.dev/docs/features/low-power-states#wakeup-sources
    kscan: kscan {
        compatible = "zmk,kscan-gpio-matrix";
        diode-direction = "col2row";
        wakeup-source;
    };

    macros {
        /**
        * Temporarily switches to a layer (`&mo`) while a modifier is held.
        * Analogous to QMK's `LM()`, using a parameterized macro.
        *
        * Params:
        *  1. Layer to switch to
        *  2. Modifier to press while layer is active
        *
        * Example:
        *  `&lm NUM_LAYER LSHIFT`
        */
        lm: lm {
            compatible = "zmk,behavior-macro-two-param";
            wait-ms = <0>;
            tap-ms = <0>;
            #binding-cells = <2>;
            bindings
                = <&macro_param_1to1>
                , <&macro_press &mo MACRO_PLACEHOLDER>
                , <&macro_param_2to1>
                , <&macro_press &kp MACRO_PLACEHOLDER>
                , <&macro_pause_for_release>
                , <&macro_param_2to1>
                , <&macro_release &kp MACRO_PLACEHOLDER>
                , <&macro_param_1to1>
                , <&macro_release &mo MACRO_PLACEHOLDER>
                ;
        };

        // go to num layer and hold alt for better tiling wm experience
        test: test {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <0>;
            bindings
                =
                // hold alt and go to 1st layer
                , <&macro_press &mo 1>, <&macro_press &kp LALT>
                , <&macro_pause_for_release>
                , <&macro_release &kp LALT>
                , <&macro_release &mo 1>
                ;
        };

        swlm: swlm { //switch language macro
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LGUI>
                , <&macro_tap &kp SPACE>
                , <&macro_release &kp LGUI>
                ;
        };
    };



    keymap {
        compatible = "zmk,keymap";

        default_layer { // 0th
            bindings = <
//┌───────────────┬────────┬────────┬────────┬────────┬────────┐                          ┌────────┬────────┬────────┬────────┬────────┬────────┐
   &gresc          &kp Q    &kp W    &kp E    &kp R    &kp T                               &kp Y     &kp U   &kp I      &kp O   &kp P    &kp BSPC
//├───────────────┼────────┼────────┼────────┼────────┼────────┤                          ├────────┼────────┼────────┼────────┼────────┼────────┤
   &mt LSHIFT TAB  &kp A    &kp S    &kp D    &kp F    &kp G                               &kp H     &kp J   &kp K      &kp L   &kp SEMI &kp SQT
//├───────────────┼────────┼────────┼────────┼────────┼────────┤                          ├────────┼────────┼────────┼────────┼────────┼────────┤
   &kp LCTRL       &kp Z    &kp X    &kp C    &kp V    &kp B                               &kp N     &kp M   &kp COMMA  &kp DOT &kp FSLH &swlm
//└───────────────┴────────┴────────┴────────┴────────┴────────┘                          └────────┴────────┴────────┴────────┴────────┴────────┘
//                                  ┌────────┬────────┬────────┐            ┌────────┬────────┬────────┐
                                     &kp LGUI    &mo 1  &mt &test SPACE       &kp RET  &mo 2   &kp LALT
//                                  └────────┴────────┴────────┘            └────────┴────────┴────────┘
            >;
     };

        lower_layer { // 1st
            bindings = <
//┌──────────┬────────────┬────────────┬────────────┬──────────┬────────┐      ┌────────────┬──────────────┬───────────────┬───────────────┬────────────────┬─────────────────┐     
    &key_repeat  &trans       &trans       &kp UP      &trans    &trans          &trans        &kp N7         &kp N8          &kp N9           &trans          &trans
//├──────────┼────────────┼────────────┼────────────┼──────────┼────────┤      ├────────────┼──────────────┼───────────────┼───────────────┼────────────────┼─────────────────┤
    &kp LSHFT    &trans       &kp LEFT    &kp DOWN    &kp RIGHT  &trans            &kp N0       &kp N6         &kp N5          &kp N4        &trans            &trans
//├──────────┼────────────┼────────────┼────────────┼──────────┼────────┤      ├────────────┼──────────────┼───────────────┼───────────────┼────────────────┼─────────────────┤
    &kp LCTRL   &trans        &trans       &trans     &kp BSPC   &kp DEL         &kp PSCRN      &kp N1         &kp N2          &kp N3        &trans            &trans
//└──────────┴────────────┴────────────┴────────────┴──────────┴────────┘      └────────────┴──────────────┴───────────────┴───────────────┴────────────────┴─────────────────┘
//                                           ┌────────┬────────┬────────┐      ┌────────┬────────┬────────┐
                                              &kp LGUI  &trans  &kp SPACE       &kp RET  &trans   &kp LALT
//                                           └────────┴────────┴────────┘      └────────┴────────┴────────┘
            >;
        };

        raise_layer { // 2nd
            bindings = <
//┌──────────┬────────────┬────────────┬────────────┬──────────┬────────┐      ┌────────────┬──────────────┬───────────────┬───────────────┬────────────────┬─────────────────┐     
    &kp EXCL     &kp AT    &kp HASH     &kp PAGE_UP   &kp DLLR  &kp PRCNT        &kp CARET     &kp AMPS       &kp ASTRK       &kp LPAR        &kp RPAR         &trans
//├──────────┼────────────┼────────────┼────────────┼──────────┼────────┤      ├────────────┼──────────────┼───────────────┼───────────────┼────────────────┼─────────────────┤
   &kp LSHFT  &kp C_VOL_UP  &kp HOME   &kp PAGE_DOWN  &kp END    &trans          &kp MINUS     &kp EQUAL      &kp LBKT        &kp RBKT        &kp BSLH          &kp GRAVE
//├──────────┼────────────┼────────────┼────────────┼──────────┼────────┤      ├────────────┼──────────────┼───────────────┼───────────────┼────────────────┼─────────────────┤
   &kp LCTRL  &kp C_VOL_DN  &kp C_MUTE    &trans       &trans    &trans          &kp UNDER     &kp PLUS       &kp LBRC        &kp RBRC        &kp PIPE          &kp TILDE
//└──────────┴────────────┴────────────┴────────────┴──────────┴────────┘      └────────────┴──────────────┴───────────────┴───────────────┴────────────────┴─────────────────┘
//                                           ┌────────┬────────┬────────┐      ┌────────┬────────┬────────┐
                                              &kp LGUI  &trans  &kp SPACE       &kp RET   &trans  &kp LALT
//                                           └────────┴────────┴────────┘      └────────┴────────┴────────┘
            >;
        };

        both_layer { // 3rd
            bindings = <
//┌────────────┬────────────┬────────────┬────────────┬──────────┬────────┐      ┌────────────┬──────────────┬───────────────┬───────────────┬────────────────┬─────────────────┐     
   &kp F1        &kp F2         &kp F3       &kp F4      &kp F5    &kp F6           &kp F7        &kp F8        &kp F9           &kp F10        &kp F11          &kp F12
//├────────────┼────────────┼────────────┼────────────┼──────────┼────────┤      ├────────────┼──────────────┼───────────────┼───────────────┼────────────────┼─────────────────┤
   &trans         &trans       &trans       &trans       &trans    &trans          &trans        &trans         &trans            &trans         &trans          &trans
//├────────────┼────────────┼────────────┼────────────┼──────────┼────────┤      ├────────────┼──────────────┼───────────────┼───────────────┼────────────────┼─────────────────┤
   &trans        &out OUT_TOG   &soft_off   &trans       &trans   &studio_unlock   &bt BT_SEL 0  &bt BT_SEL 1   &bt BT_SEL 2       &trans       &trans            &bt BT_CLR
//└────────────┴────────────┴────────────┴────────────┴──────────┴────────┘      └────────────┴──────────────┴───────────────┴───────────────┴────────────────┴─────────────────┘
//                                           ┌────────┬────────┬────────┐      ┌────────┬────────┬────────┐
                                              &trans    &trans   &trans          &trans   &trans   &trans
//                                           └────────┴────────┴────────┘      └────────┴────────┴────────┘
            >;
        };

        sw_layer { // 4th
        bindings = <
//┌────────────┬────────────┬────────────┬────────────┬──────────┬────────┐      ┌────────────┬──────────────┬───────────────┬───────────────┬────────────────┬─────────────────┐
   &trans        &trans         &trans       &trans      &trans    &trans           &trans        &trans        &mmv MOVE_UP        &trans           &trans          &trans
//├────────────┼────────────┼────────────┼────────────┼──────────┼────────┤      ├────────────┼──────────────┼───────────────┼───────────────┼────────────────┼─────────────────┤
   &trans         &trans       &trans       &trans       &trans    &trans             &mkp LCLK   &mmv MOVE_LEFT  &mmv MOVE_DOWN &mmv MOVE_RIGHT   &mkp RCLK        &msc SCRL_UP
//├────────────┼────────────┼────────────┼────────────┼──────────┼────────┤      ├────────────┼──────────────┼───────────────┼───────────────┼────────────────┼─────────────────┤
   &trans         &trans       &trans       &trans        &trans    &trans            &trans         &trans          &trans       &trans         &trans            &msc SCRL_DOWN
//└────────────┴────────────┴────────────┴────────────┴──────────┴────────┘      └────────────┴──────────────┴───────────────┴───────────────┴────────────────┴─────────────────┘
//                                           ┌────────┬────────┬────────┐      ┌────────┬────────┬────────┐
                                              &trans    &trans   &trans          &trans   &trans   &trans
//                                           └────────┴────────┴────────┘      └────────┴────────┴────────┘
            >;
        };
    };
};
